# Ubuntu variant
ARG VARIANT=20.04
FROM ubuntu:${VARIANT}

RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install Docker CE CLI
RUN apt-get update \
  && apt-get install -y apt-transport-https ca-certificates curl gnupg2 lsb-release \
  && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \
  && echo "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list \
  && apt-get update \
  && apt-get install -y docker-ce-cli

# Install Docker Compose
RUN export LATEST_COMPOSE_VERSION=$(curl -sSL "https://api.github.com/repos/docker/compose/releases/latest" | grep -o -P '(?<="tag_name": ").+(?=")') \
  && curl -sSL "https://github.com/docker/compose/releases/download/${LATEST_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
  && chmod +x /usr/local/bin/docker-compose


# Install extra debs
RUN SOLANA_DEBS=" \
  pkg-config \
  build-essential \
  libudev-dev \
  libssl-dev \
  "; \
  apt-get update && export DEBIAN_FRONTEND=noninteractive \
  && apt-get -y --no-install-recommends install \
  git \
  curl \
  vim \
  $SOLANA_DEBS

# # Install nvm
ENV NVM_DIR /usr/local/nvm
RUN mkdir $NVM_DIR
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | sh

# # Install npm
ENV NODE_VERSION 16
RUN source $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && nvm alias default $NODE_VERSION \
  && nvm use default

# # Install Rust
ENV RUST_VERSION 1.56.1
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain $RUST_VERSION -y

# ENV SOLANA_VERSION stable
# Install Solana
RUN curl -sSfL https://release.solana.com/$SOLANA_VERSION/install | sh

# # Install anchor
RUN source /root/.cargo/env \
  && cargo install --git https://github.com/project-serum/anchor anchor-cli --locked

# # Install global node packages
RUN source $NVM_DIR/nvm.sh \
  && npm install -g \
  yarn \
  mocha \
  @project-serum/anchor \
  @solana/web3.js

# Copy the full repository into the /workspace directory
# This will then get mounted into the shared app volume
WORKDIR /workspace
COPY . .
